Resources:
  MyBucket:
    Type: "AWS::S3::Bucket"
    Properties:
      BucketName: my-bucket-33732

  MyFunction:
    Type: "AWS::Lambda::Function"
    Properties:
      Code:
        S3Bucket: my-lambda-deploy-bucket-33732
        S3Key: hello-world-lambda.zip
      FunctionName: my-lambda-function
      Handler: index.handler
      Role: !GetAtt MyRole.Arn
      Runtime: nodejs14.x
      Timeout: 30

  MyRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: "sts:AssumeRole"
      Policies:
        - PolicyName: S3Access
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "s3:GetObject"
                  - "s3:ListBucket"
                Resource: !Sub 'arn:aws:s3:::${MyBucket}/*'
              - Effect: Allow
                Action:
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                Resource: "*"

  LambdaS3InvokePermission:
    Type: "AWS::Lambda::Permission"
    Properties:
      FunctionName: !GetAtt MyFunction.Arn
      Action: "lambda:InvokeFunction"
      Principal: "s3.amazonaws.com"
      SourceArn: !Sub "arn:aws:s3:::${MyBucket}"
